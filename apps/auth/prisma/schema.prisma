datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  address    String
  birthday   DateTime
  createdAt  DateTime   @default(now())
  documents  Document[]
  email      String
  firstName  String
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  lastName   String
  password   String
  phone      String
  role       Role?      @relation(fields: [roleId], references: [id])
  roleId     String?    @db.ObjectId
  roles      Json
  state      String
  updatedAt  DateTime   @updatedAt
  username   String     @unique
  userType   UserType?  @relation(fields: [userTypeId], references: [id])
  userTypeId String?    @db.ObjectId
  zip        String?
}

model Role {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  updatedAt   DateTime @updatedAt
  users       User[]
}

model UserType {
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  updatedAt DateTime @updatedAt
  users     User[]
}

model Template {
  createdAt DateTime   @default(now())
  documents Document[]
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  updatedAt DateTime   @updatedAt
}

model Document {
  createdAt      DateTime  @default(now())
  expirationDate DateTime
  file           Json
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  isComplete     Boolean
  name           String
  template       Template? @relation(fields: [templateId], references: [id])
  templateId     String?   @db.ObjectId
  updatedAt      DateTime  @updatedAt
  user           User?     @relation(fields: [userId], references: [id])
  userId         String?   @db.ObjectId
}

model Content {
  createdAt DateTime @default(now())
  files     Json?
  header    String
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  images    Json?
  text      String?
  updatedAt DateTime @updatedAt
}
